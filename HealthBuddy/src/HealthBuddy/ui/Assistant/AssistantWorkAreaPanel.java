package HealthBuddy.ui.Assistant;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import HealthBuddy.models.EcoSystem;
import HealthBuddy.models.Employee.Employee;
import HealthBuddy.models.Enterprise.Enterprise;
import HealthBuddy.models.Healthcare.Appointment.AppointmentInformation;
import HealthBuddy.models.Healthcare.Organisation.HealthcareOrganisationAssistant;
import HealthBuddy.models.Network.Network;
import HealthBuddy.models.Organisation.Organisation;
import HealthBuddy.models.User.User;
import HealthBuddy.models.WorkQueue.AssistantAddingTimetoWQ;
import HealthBuddy.models.WorkQueue.DoctorAssistantAccountWQ;
import HealthBuddy.models.WorkQueue.HealthcareTrustRequestWQ;
import HealthBuddy.models.WorkQueue.PatientBookingWQ;
import HealthBuddy.models.WorkQueue.TrustReceiveWR;
import HealthBuddy.models.WorkQueue.WorkRequest;
import HealthBuddy.Config.SMSUtility;
import javax.swing.ImageIcon;
import java.awt.Image;

/**
 *
 * @author Nidhi Singh
 */
public class AssistantWorkAreaPanel extends javax.swing.JPanel {

    private JPanel displayJPanel;
    private User ua;
    private Enterprise enterprise;
    private EcoSystem ecosystem;
    private Network network;
    private HealthcareOrganisationAssistant hospitalAssistant;
    private AssistantAddingTimetoWQ assistantAddSlot;
    private DefaultComboBoxModel minuteModel;
    
    /**
     * Creates new form AssistantWorkAreaPanel
     */
//    public AssistantWorkAreaPanel(JPanel dispJPanel, UserAccount account, HospitalOrganisationAssistant organisation, Enterprise enterprise,EcoSystem system) {
//        initComponents();
//        this.displayJPanel = dispJPanel;
//        this.ua = account;
//        this.hospitalAssistant = organisation;
//        this.enterprise = enterprise;
//        this.ecosystem = system;
//        lblAssistantName.setText(ua.getUsername());
//        populateAppointmentTable();
//        populateAcknowledgmentTable();
//
//
//    }
    
    public AssistantWorkAreaPanel(JPanel dispJPanel, User account, HealthcareOrganisationAssistant organisation, Enterprise enterprise,Network net,EcoSystem system) {

        this.displayJPanel = dispJPanel;
        this.ua = account;
        this.hospitalAssistant = organisation;
        this.enterprise = enterprise;
        this.ecosystem = system;
        this.network = net;
        populateMinuteComboBoxModel();
        initComponents();
        populateFundingRequestsTable();
        populateComboDoctor();
        populateAppointmentTable();
        populateAcknowledgmentTable();
        assistantNmLabel9.setText(ua.getEmployee().getEmployeeName());
        lblAssistantNm2.setText(ua.getEmployee().getEmployeeName());
        lblAsstantNm5.setText(ua.getEmployee().getEmployeeName());
        assistntName9.setText(ua.getEmployee().getEmployeeName());
        setSize(1540,800);

    }
    
    public void populateMinuteComboBoxModel() {
        minuteModel = new DefaultComboBoxModel();
        minuteModel.addElement("mm");
        
        for (int i=0; i<60; i++) {

            minuteModel.addElement(String.valueOf(i));
        }
    
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        donateTabPn = new javax.swing.JTabbedPane();
        fundreqmanagePan = new javax.swing.JPanel();
        msgaLabel = new javax.swing.JLabel();
        msgbLabel = new javax.swing.JLabel();
        msgcLabel = new javax.swing.JLabel();
        fReqTextF = new javax.swing.JTextField();
        buttonFundR = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblFundingRequests = new javax.swing.JTable();
        WelcmLabel = new javax.swing.JLabel();
        lblAssistantNm2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        trustackPanel1 = new javax.swing.JPanel();
        deliDirLabel12 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblAcknowledgement = new javax.swing.JTable();
        lblWelcm4 = new javax.swing.JLabel();
        lblAsstantNm5 = new javax.swing.JLabel();
        mangApptmntPan5 = new javax.swing.JPanel();
        hlpLabel7 = new javax.swing.JLabel();
        delvryDirLabel9 = new javax.swing.JLabel();
        buttonallow = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAppointment = new javax.swing.JTable();
        buttonRejct4 = new javax.swing.JButton();
        welcmLabel6 = new javax.swing.JLabel();
        assistntName9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        mngDoctimePan6 = new javax.swing.JPanel();
        menuListName9 = new javax.swing.JLabel();
        dlvryDirLabel9 = new javax.swing.JLabel();
        buttontnAddTime9 = new javax.swing.JButton();
        comboManageTime9 = new javax.swing.JComboBox();
        menuListName19 = new javax.swing.JLabel();
        combDate9 = new javax.swing.JComboBox();
        cmbMonth9 = new javax.swing.JComboBox();
        comboYr9 = new javax.swing.JComboBox();
        lblWelcm9 = new javax.swing.JLabel();
        assistantNmLabel9 = new javax.swing.JLabel();
        menuItemName26 = new javax.swing.JLabel();
        comboMin9 = new javax.swing.JComboBox();
        comboHr9 = new javax.swing.JComboBox();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(0, 102, 102));
        jPanel1.setPreferredSize(new java.awt.Dimension(1925, 857));

        donateTabPn.setBackground(new java.awt.Color(0, 102, 102));
        donateTabPn.setForeground(new java.awt.Color(255, 255, 255));
        donateTabPn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        fundreqmanagePan.setBackground(new java.awt.Color(255, 255, 255));
        fundreqmanagePan.setForeground(new java.awt.Color(0, 102, 102));

        msgaLabel.setBackground(new java.awt.Color(255, 255, 255));
        msgaLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        msgaLabel.setForeground(new java.awt.Color(0, 102, 102));
        msgaLabel.setText(" ");

        msgbLabel.setBackground(new java.awt.Color(255, 255, 255));
        msgbLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        msgbLabel.setForeground(new java.awt.Color(0, 102, 102));
        msgbLabel.setText("Assistant Work Area");

        msgcLabel.setBackground(new java.awt.Color(255, 255, 255));
        msgcLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        msgcLabel.setForeground(new java.awt.Color(0, 102, 102));
        msgcLabel.setText("Funding Required:      $");

        fReqTextF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fReqTextF.setForeground(new java.awt.Color(0, 102, 102));

        buttonFundR.setBackground(new java.awt.Color(0, 102, 102));
        buttonFundR.setFont(new java.awt.Font("Tahoma", 1, 19)); // NOI18N
        buttonFundR.setForeground(new java.awt.Color(255, 255, 255));
        buttonFundR.setText("Raise Funding Request");
        buttonFundR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFundRActionPerformed(evt);
            }
        });

        jScrollPane4.setForeground(new java.awt.Color(0, 102, 102));

        tblFundingRequests.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblFundingRequests.setForeground(new java.awt.Color(0, 102, 102));
        tblFundingRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Name", "Prescription", "Funding Required", "Funding Approved"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFundingRequests.setRowHeight(40);
        jScrollPane4.setViewportView(tblFundingRequests);

        WelcmLabel.setBackground(new java.awt.Color(255, 255, 255));
        WelcmLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        WelcmLabel.setForeground(new java.awt.Color(0, 102, 102));
        WelcmLabel.setText("Welcome ");

        lblAssistantNm2.setBackground(new java.awt.Color(255, 255, 255));
        lblAssistantNm2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblAssistantNm2.setForeground(new java.awt.Color(0, 102, 102));
        lblAssistantNm2.setText("value");

        jLabel3.setBackground(new java.awt.Color(204, 204, 255));

        jLabel7.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout fundreqmanagePanLayout = new javax.swing.GroupLayout(fundreqmanagePan);
        fundreqmanagePan.setLayout(fundreqmanagePanLayout);
        fundreqmanagePanLayout.setHorizontalGroup(
            fundreqmanagePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fundreqmanagePanLayout.createSequentialGroup()
                .addGroup(fundreqmanagePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fundreqmanagePanLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(msgaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 798, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(fundreqmanagePanLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(WelcmLabel)
                        .addGap(18, 18, 18)
                        .addComponent(lblAssistantNm2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(fundreqmanagePanLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(fundreqmanagePanLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(msgcLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(fReqTextF, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonFundR)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2162, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(173, 173, 173))
            .addGroup(fundreqmanagePanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(msgbLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fundreqmanagePanLayout.setVerticalGroup(
            fundreqmanagePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fundreqmanagePanLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(msgbLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(fundreqmanagePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(fundreqmanagePanLayout.createSequentialGroup()
                        .addGroup(fundreqmanagePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(fundreqmanagePanLayout.createSequentialGroup()
                        .addGroup(fundreqmanagePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(WelcmLabel)
                            .addComponent(lblAssistantNm2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(msgaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(fundreqmanagePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(msgcLabel)
                            .addComponent(fReqTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonFundR))
                        .addGap(459, 459, 459))))
        );

        donateTabPn.addTab("Funding Requests", fundreqmanagePan);

        trustackPanel1.setBackground(new java.awt.Color(255, 255, 255));
        trustackPanel1.setForeground(new java.awt.Color(0, 102, 102));

        deliDirLabel12.setBackground(new java.awt.Color(255, 255, 255));
        deliDirLabel12.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        deliDirLabel12.setForeground(new java.awt.Color(0, 102, 102));
        deliDirLabel12.setText("Assistant Work Area");

        jScrollPane5.setForeground(new java.awt.Color(0, 102, 102));

        tblAcknowledgement.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblAcknowledgement.setForeground(new java.awt.Color(0, 102, 102));
        tblAcknowledgement.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient", "Date Acknowledged", "Funds", "Funding Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAcknowledgement.setSelectionBackground(new java.awt.Color(0, 102, 102));
        jScrollPane5.setViewportView(tblAcknowledgement);

        lblWelcm4.setBackground(new java.awt.Color(255, 255, 255));
        lblWelcm4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblWelcm4.setForeground(new java.awt.Color(0, 102, 102));
        lblWelcm4.setText("Welcome ");

        lblAsstantNm5.setBackground(new java.awt.Color(255, 255, 255));
        lblAsstantNm5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblAsstantNm5.setForeground(new java.awt.Color(0, 102, 102));
        lblAsstantNm5.setText("value");

        javax.swing.GroupLayout trustackPanel1Layout = new javax.swing.GroupLayout(trustackPanel1);
        trustackPanel1.setLayout(trustackPanel1Layout);
        trustackPanel1Layout.setHorizontalGroup(
            trustackPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(trustackPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(trustackPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deliDirLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(trustackPanel1Layout.createSequentialGroup()
                        .addComponent(lblWelcm4)
                        .addGap(18, 18, 18)
                        .addComponent(lblAsstantNm5, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(4156, Short.MAX_VALUE))
        );
        trustackPanel1Layout.setVerticalGroup(
            trustackPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(trustackPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(deliDirLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(trustackPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWelcm4)
                    .addComponent(lblAsstantNm5))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(550, Short.MAX_VALUE))
        );

        donateTabPn.addTab(" Acknowledgments", trustackPanel1);

        mangApptmntPan5.setBackground(new java.awt.Color(255, 255, 255));
        mangApptmntPan5.setForeground(new java.awt.Color(0, 102, 102));

        hlpLabel7.setBackground(new java.awt.Color(255, 255, 255));
        hlpLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        hlpLabel7.setForeground(new java.awt.Color(0, 102, 102));
        hlpLabel7.setText(" ");

        delvryDirLabel9.setBackground(new java.awt.Color(255, 255, 255));
        delvryDirLabel9.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        delvryDirLabel9.setForeground(new java.awt.Color(0, 102, 102));
        delvryDirLabel9.setText("Assistant Work Area");

        buttonallow.setBackground(new java.awt.Color(0, 102, 102));
        buttonallow.setFont(new java.awt.Font("Tahoma", 1, 19)); // NOI18N
        buttonallow.setForeground(new java.awt.Color(255, 255, 255));
        buttonallow.setText("Accept");
        buttonallow.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonallow.setBorderPainted(false);
        buttonallow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonallowActionPerformed(evt);
            }
        });

        jScrollPane1.setForeground(new java.awt.Color(0, 102, 102));

        tblAppointment.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblAppointment.setForeground(new java.awt.Color(0, 102, 102));
        tblAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Patient ID", "Appointment Details", "Type Of Consultation", "Doctor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAppointment.setRowHeight(40);
        tblAppointment.setSelectionBackground(new java.awt.Color(0, 102, 102));
        jScrollPane1.setViewportView(tblAppointment);

        buttonRejct4.setBackground(new java.awt.Color(0, 102, 102));
        buttonRejct4.setFont(new java.awt.Font("Tahoma", 1, 19)); // NOI18N
        buttonRejct4.setForeground(new java.awt.Color(255, 255, 255));
        buttonRejct4.setText("Reject");
        buttonRejct4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonRejct4.setBorderPainted(false);
        buttonRejct4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRejct4ActionPerformed(evt);
            }
        });

        welcmLabel6.setBackground(new java.awt.Color(255, 255, 255));
        welcmLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        welcmLabel6.setForeground(new java.awt.Color(0, 102, 102));
        welcmLabel6.setText("Welcome ");

        assistntName9.setBackground(new java.awt.Color(255, 255, 255));
        assistntName9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        assistntName9.setForeground(new java.awt.Color(0, 102, 102));
        assistntName9.setText("value");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout mangApptmntPan5Layout = new javax.swing.GroupLayout(mangApptmntPan5);
        mangApptmntPan5.setLayout(mangApptmntPan5Layout);
        mangApptmntPan5Layout.setHorizontalGroup(
            mangApptmntPan5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mangApptmntPan5Layout.createSequentialGroup()
                .addGroup(mangApptmntPan5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mangApptmntPan5Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(welcmLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(assistntName9, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mangApptmntPan5Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(delvryDirLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mangApptmntPan5Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(mangApptmntPan5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mangApptmntPan5Layout.createSequentialGroup()
                                .addComponent(buttonallow, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(buttonRejct4, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mangApptmntPan5Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(mangApptmntPan5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hlpLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 798, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(mangApptmntPan5Layout.createSequentialGroup()
                                        .addGap(84, 84, 84)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(3304, Short.MAX_VALUE))
        );
        mangApptmntPan5Layout.setVerticalGroup(
            mangApptmntPan5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mangApptmntPan5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(delvryDirLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(mangApptmntPan5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(welcmLabel6)
                    .addComponent(assistntName9))
                .addGroup(mangApptmntPan5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mangApptmntPan5Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(hlpLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mangApptmntPan5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addGroup(mangApptmntPan5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonallow)
                    .addComponent(buttonRejct4))
                .addContainerGap(473, Short.MAX_VALUE))
        );

        donateTabPn.addTab("Manage Appointments", mangApptmntPan5);

        mngDoctimePan6.setBackground(new java.awt.Color(255, 255, 255));
        mngDoctimePan6.setForeground(new java.awt.Color(0, 102, 102));
        mngDoctimePan6.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        mngDoctimePan6.setMaximumSize(new java.awt.Dimension(1000, 500));

        menuListName9.setBackground(new java.awt.Color(255, 255, 255));
        menuListName9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        menuListName9.setForeground(new java.awt.Color(0, 102, 102));
        menuListName9.setText("Doctor Name:");

        dlvryDirLabel9.setBackground(new java.awt.Color(255, 255, 255));
        dlvryDirLabel9.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        dlvryDirLabel9.setForeground(new java.awt.Color(0, 102, 102));
        dlvryDirLabel9.setText("Assistant Work Area");

        buttontnAddTime9.setBackground(new java.awt.Color(0, 102, 102));
        buttontnAddTime9.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        buttontnAddTime9.setForeground(new java.awt.Color(255, 255, 255));
        buttontnAddTime9.setText("Add Slot Available");
        buttontnAddTime9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttontnAddTime9.setBorderPainted(false);
        buttontnAddTime9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttontnAddTime9ActionPerformed(evt);
            }
        });

        comboManageTime9.setBackground(new java.awt.Color(255, 255, 255));
        comboManageTime9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboManageTime9.setForeground(new java.awt.Color(0, 102, 102));
        comboManageTime9.setMaximumRowCount(12);

        menuListName19.setBackground(new java.awt.Color(255, 255, 255));
        menuListName19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        menuListName19.setForeground(new java.awt.Color(0, 102, 102));
        menuListName19.setText("Date:");

        combDate9.setBackground(new java.awt.Color(255, 255, 255));
        combDate9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combDate9.setForeground(new java.awt.Color(0, 102, 102));
        combDate9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MM", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        cmbMonth9.setBackground(new java.awt.Color(255, 255, 255));
        cmbMonth9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbMonth9.setForeground(new java.awt.Color(0, 102, 102));
        cmbMonth9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DD", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        cmbMonth9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMonth9ActionPerformed(evt);
            }
        });

        comboYr9.setBackground(new java.awt.Color(255, 255, 255));
        comboYr9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboYr9.setForeground(new java.awt.Color(0, 102, 102));
        comboYr9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "YYYY", "2021", "2022", "2023", "2024", "2025" }));
        comboYr9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboYr9ActionPerformed(evt);
            }
        });

        lblWelcm9.setBackground(new java.awt.Color(255, 255, 255));
        lblWelcm9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblWelcm9.setForeground(new java.awt.Color(0, 102, 102));
        lblWelcm9.setText("Welcome ");

        assistantNmLabel9.setBackground(new java.awt.Color(255, 255, 255));
        assistantNmLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        assistantNmLabel9.setForeground(new java.awt.Color(0, 102, 102));
        assistantNmLabel9.setText("value");

        menuItemName26.setBackground(new java.awt.Color(255, 255, 255));
        menuItemName26.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        menuItemName26.setForeground(new java.awt.Color(0, 102, 102));
        menuItemName26.setText("Time: ");

        comboMin9.setBackground(new java.awt.Color(255, 255, 255));
        comboMin9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboMin9.setForeground(new java.awt.Color(0, 102, 102));
        comboMin9.setModel(minuteModel);
        comboMin9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMin9ActionPerformed(evt);
            }
        });

        comboHr9.setBackground(new java.awt.Color(255, 255, 255));
        comboHr9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboHr9.setForeground(new java.awt.Color(0, 102, 102));
        comboHr9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "HH", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        comboHr9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboHr9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mngDoctimePan6Layout = new javax.swing.GroupLayout(mngDoctimePan6);
        mngDoctimePan6.setLayout(mngDoctimePan6Layout);
        mngDoctimePan6Layout.setHorizontalGroup(
            mngDoctimePan6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mngDoctimePan6Layout.createSequentialGroup()
                .addGroup(mngDoctimePan6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mngDoctimePan6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblWelcm9)
                        .addGap(18, 18, 18)
                        .addComponent(assistantNmLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mngDoctimePan6Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(mngDoctimePan6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(menuListName9, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(menuListName19, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(menuItemName26, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mngDoctimePan6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboManageTime9, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mngDoctimePan6Layout.createSequentialGroup()
                                .addGroup(mngDoctimePan6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbMonth9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboHr9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(mngDoctimePan6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboMin9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(mngDoctimePan6Layout.createSequentialGroup()
                                        .addComponent(combDate9, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(comboYr9, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(buttontnAddTime9, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(mngDoctimePan6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dlvryDirLabel9)))
                .addContainerGap(4296, Short.MAX_VALUE))
        );
        mngDoctimePan6Layout.setVerticalGroup(
            mngDoctimePan6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mngDoctimePan6Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(dlvryDirLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(mngDoctimePan6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWelcm9)
                    .addComponent(assistantNmLabel9))
                .addGap(60, 60, 60)
                .addGroup(mngDoctimePan6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menuListName9)
                    .addComponent(comboManageTime9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(mngDoctimePan6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menuListName19)
                    .addComponent(combDate9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboYr9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbMonth9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(mngDoctimePan6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuItemName26)
                    .addGroup(mngDoctimePan6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboMin9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboHr9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addComponent(buttontnAddTime9)
                .addContainerGap(671, Short.MAX_VALUE))
        );

        donateTabPn.addTab("Manage Doctor Slots", mngDoctimePan6);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(donateTabPn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(donateTabPn, javax.swing.GroupLayout.PREFERRED_SIZE, 1121, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1547, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1535, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 863, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttontnAddTime9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttontnAddTime9ActionPerformed
        // TODO add your handling code here:
        String day,month,year, hour, minute;
        
           day = (String)combDate9.getSelectedItem();
           month = (String)cmbMonth9.getSelectedItem();
           year = (String)comboYr9.getSelectedItem();
           hour = (String) comboHr9.getSelectedItem();
           minute =  (String) comboMin9.getSelectedItem();
           int date=1,monthValue=1,yearValue=1990, hourValue=0, minuteValue =0;

           try {
                date = Integer.parseInt(day);
                monthValue = Integer.parseInt(month);
                yearValue = Integer.parseInt(year);
                hourValue = Integer.parseInt(hour);
                minuteValue = Integer.parseInt(minute);



           } catch (Exception e) {

               JOptionPane.showMessageDialog(null,
                       "Invalid entry for day", "Error", JOptionPane.INFORMATION_MESSAGE);

               return;
           }
           

           assistantAddSlot = new AssistantAddingTimetoWQ();
           
           assistantAddSlot.setTimings(LocalDateTime.of(yearValue, monthValue,date, hourValue, minuteValue, 0));
           for(Network net : ecosystem.getNetworkList())
           {
               for(Enterprise ent : net.getEnterpriseCatalog().getEnterpriseList())
               {
                   if(ent.getName().equalsIgnoreCase(enterprise.getName()))
                   {
                       assistantAddSlot.setCity(net.getNetworkName());
                   }
               }
           }
           Employee e = new Employee();
           e = (Employee)comboManageTime9.getSelectedItem();
           
           assistantAddSlot.setDoctor(e.getEmployeeName());
           assistantAddSlot.setSender(ua);
           assistantAddSlot.setStatus("Available");
           assistantAddSlot.setMessage("Available slots");
           assistantAddSlot.setHealthcareName(enterprise.getName());
           assistantAddSlot.setCity(network.getNetworkName());
           ecosystem.getPatientDir().getWorkQueue().getWorkRequestList().add(assistantAddSlot);
           ua.getWorkQueue().getWorkRequestList().add(assistantAddSlot);
            
           JOptionPane.showMessageDialog(null, "Successfully added doctor's slot!!", "Success", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_buttontnAddTime9ActionPerformed

    private void buttonallowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonallowActionPerformed
        // TODO add your handling code here:
       int selectedRow = tblAppointment.getSelectedRow();
            if(selectedRow>-1)
            {
                PatientBookingWQ patientBooking = (PatientBookingWQ)tblAppointment.getValueAt(selectedRow, 0);
                
                if(patientBooking.getStatus().equals("Approved"))
                {

                    JOptionPane.showMessageDialog(null,"Appointment for this patient is already accepted!","Warning",JOptionPane.WARNING_MESSAGE);
                }
                else if(patientBooking.getStatus().equals("Rejected"))
                {


                    JOptionPane.showMessageDialog(null,"Appointment for this patient is already denied!","Warning",JOptionPane.WARNING_MESSAGE);
                }
                
                else
                {
                    patientBooking.setStatus("Approved");
                    populateAppointmentTable();
                    AppointmentInformation appointment = ecosystem.getAppointmentCatalog().createAppointment();
                    appointment.setCityOfTreated(patientBooking.getCity());
                    appointment.setDoctorName(patientBooking.getDoctor());
                    appointment.setHospitalName(patientBooking.getHospitalName());
                    appointment.setPatient(patientBooking.getPatient());
                    appointment.setDate(new Date());
                    String message = "Dear " + patientBooking.getPatient().getPatientName() + ",\n\nThis is appointment confirmation message from HealthBuddy.  " + " " + "\n\nThanks,\nHealthBuddy Team";

                    SMSUtility.sendSMS(patientBooking.getPatient().getContactNo(), message);
                    JOptionPane.showMessageDialog(null, "Approved Patient Appointment!!", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            
            else
            {
                JOptionPane.showMessageDialog(null, "Kindly select patient from the record first!","Warning", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_buttonallowActionPerformed
    }
    
    private void buttonFundRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFundRActionPerformed
        // TODO add your handling code here:
         try{
         int selectedRow = tblFundingRequests.getSelectedRow();
         
         if(selectedRow>-1)
            {
                DoctorAssistantAccountWQ  assistantAccounting = (DoctorAssistantAccountWQ)tblFundingRequests.getValueAt(selectedRow, 0);
                HealthcareTrustRequestWQ fundsRequest = new HealthcareTrustRequestWQ();
                
                fundsRequest.setSender(ua);
                fundsRequest.setAmount(Float.parseFloat(fReqTextF.getText()));
                fundsRequest.setHospitalName(enterprise.getName());
                fundsRequest.setMessage("Sponsorship Required");
                fundsRequest.setPatientName(assistantAccounting.getApd().getPatient().getPatientName());
                fundsRequest.setCity(network.getNetworkName());
                fundsRequest.setStatus("No");
                
                for(Network network : ecosystem.getNetworkList())
                {
                    if(network.getNetworkName().equals(this.network.getNetworkName()))
                    {
                            assistantAccounting.setMessage("Sent");
                            network.getFundsRequests().getWorkRequestList().add(fundsRequest);
                            ua.getWorkQueue().getWorkRequestList().add(fundsRequest);
                            
                        JOptionPane.showMessageDialog(null, "Posted successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                        break;
                }
                }
                fReqTextF.setText("");
            }
        
            else
            {
                JOptionPane.showMessageDialog(null, "Kindly select a patient record to move forward!","Warning", JOptionPane.WARNING_MESSAGE);
                    }
         }
            catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Kindly enter appropriate information!","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonFundRActionPerformed

    private void comboYr9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboYr9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboYr9ActionPerformed

    private void buttonRejct4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRejct4ActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblAppointment.getSelectedRow();
         if(selectedRow>-1)
            {
                PatientBookingWQ patientBooking = (PatientBookingWQ)tblAppointment.getValueAt(selectedRow, 0);
                
                if(patientBooking.getStatus().equals("Approved"))
                {
                    JOptionPane.showMessageDialog(null,"Appointment for this patient is already accepted!","Warning",JOptionPane.WARNING_MESSAGE);
                }
                else if(patientBooking.getStatus().equals("Rejected"))
                {
                    JOptionPane.showMessageDialog(null,"Appointment for this patient is already denied!","Warning",JOptionPane.WARNING_MESSAGE);
                }
                else
                {
                    patientBooking.setStatus("Rejected");
                    populateAppointmentTable();

                    JOptionPane.showMessageDialog(null, "Patient Appointment Rejected!!", "Error", JOptionPane.INFORMATION_MESSAGE);
                    String message = "Dear " + patientBooking.getPatient().getPatientName() + ",\n\nDue to change in schedule your appointment is denied. \n Kindly reconsider your appointment.  " + " " + "\n\nThanks,\nTeam MediStop";

                    SMSUtility.sendSMS(patientBooking.getPatient().getContactNo(), message);
                }
              
            }
            else
            {
                 JOptionPane.showMessageDialog(null, "Kindly Select a Patient appointment record to move forward","Warning", JOptionPane.WARNING_MESSAGE);
            }
    }//GEN-LAST:event_buttonRejct4ActionPerformed

    private void cmbMonth9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMonth9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMonth9ActionPerformed

    private void comboMin9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMin9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboMin9ActionPerformed

    private void comboHr9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboHr9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboHr9ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel WelcmLabel;
    private javax.swing.JLabel assistantNmLabel9;
    private javax.swing.JLabel assistntName9;
    private javax.swing.JButton buttonFundR;
    private javax.swing.JButton buttonRejct4;
    private javax.swing.JButton buttonallow;
    private javax.swing.JButton buttontnAddTime9;
    private javax.swing.JComboBox cmbMonth9;
    private javax.swing.JComboBox combDate9;
    private javax.swing.JComboBox comboHr9;
    private javax.swing.JComboBox comboManageTime9;
    private javax.swing.JComboBox comboMin9;
    private javax.swing.JComboBox comboYr9;
    private javax.swing.JLabel deliDirLabel12;
    private javax.swing.JLabel delvryDirLabel9;
    private javax.swing.JLabel dlvryDirLabel9;
    private javax.swing.JTabbedPane donateTabPn;
    private javax.swing.JTextField fReqTextF;
    private javax.swing.JPanel fundreqmanagePan;
    private javax.swing.JLabel hlpLabel7;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblAssistantNm2;
    private javax.swing.JLabel lblAsstantNm5;
    private javax.swing.JLabel lblWelcm4;
    private javax.swing.JLabel lblWelcm9;
    private javax.swing.JPanel mangApptmntPan5;
    private javax.swing.JLabel menuItemName26;
    private javax.swing.JLabel menuListName19;
    private javax.swing.JLabel menuListName9;
    private javax.swing.JPanel mngDoctimePan6;
    private javax.swing.JLabel msgaLabel;
    private javax.swing.JLabel msgbLabel;
    private javax.swing.JLabel msgcLabel;
    private javax.swing.JTable tblAcknowledgement;
    private javax.swing.JTable tblAppointment;
    private javax.swing.JTable tblFundingRequests;
    private javax.swing.JPanel trustackPanel1;
    private javax.swing.JLabel welcmLabel6;
    // End of variables declaration//GEN-END:variables

    
//To populate appointment table
public void populateAppointmentTable()
    {
        DefaultTableModel model = (DefaultTableModel) tblAppointment.getModel();
        
        model.setRowCount(0);
        DateFormat formatter = new SimpleDateFormat("dd/mm/yyyy");

        for(WorkRequest request : hospitalAssistant.getIncomingPatients().getWorkRequestList())
        {
            PatientBookingWQ patient = new PatientBookingWQ();
            patient = (PatientBookingWQ)request;
            Object[] row = new Object[4];
            row[0] = patient;
            row[1] = patient.getPatient().getPatientId();
            row[2] = formatter.format(patient.getRequestDate());;
            row[3] = request.getStatus();
            
            model.addRow(row);
        }          
    }

//To populate funding acknowledgment table
 public void populateAcknowledgmentTable()
    {
        DefaultTableModel model = (DefaultTableModel) tblAcknowledgement.getModel();
        
            model.setRowCount(0);
        
            for(WorkRequest request : hospitalAssistant.getFundsReceived().getWorkRequestList())
            {
                TrustReceiveWR t = new TrustReceiveWR();
                t = (TrustReceiveWR)request;
                
                if(enterprise.getName().equalsIgnoreCase(t.getHospitalName()))
                {
                    Object[] row = new Object[4];
                    row[0] = t;
                    row[1] = t.getDateReceived();
                    row[2] = t.getFunderName();
                    row[3] = t.getCity();
            
                    model.addRow(row);
                }
            }
    }
 
//To populate funding request table
public void populateFundingRequestsTable(){
    DefaultTableModel model = (DefaultTableModel) tblFundingRequests.getModel();
        
            model.setRowCount(0);
        
            for(WorkRequest request : hospitalAssistant.getFundApplicationQueue().getWorkRequestList())
            {
                DoctorAssistantAccountWQ accounting = new DoctorAssistantAccountWQ();
                accounting = (DoctorAssistantAccountWQ)request;
                Object[] row = new Object[3];
                row[0] = accounting;
                row[1] = accounting.getPrescribed();
                row[2] = accounting.isFundingRequired();
                //row[3] = accounting.isFundingApproved();
            
                model.addRow(row);
            }  
}

public void populateComboDoctor(){
    comboManageTime9.removeAllItems();
        for(Organisation o : enterprise.getOrganizationCatalog().getOrganizationList()){
            if(o.getName().equals("Doctor Organisation"))
            {
                for(Employee e: o.getEmployeeCatalog().getEmployeeCatalog())
                {
                    comboManageTime9.addItem(e);
                }
            }
        }
}
}
