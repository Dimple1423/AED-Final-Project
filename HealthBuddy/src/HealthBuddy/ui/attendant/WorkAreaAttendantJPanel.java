package HealthBuddy.ui.attendant;

import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.JPanel;
import HealthBuddy.models.EcoSystem;
import HealthBuddy.models.Enterprise.EnterpriseBloodDonorCenter;
import HealthBuddy.models.Enterprise.Enterprise;
import HealthBuddy.models.Healthcare.Appointment.AppointmentInformation;
import HealthBuddy.models.Healthcare.Organisation.HealthcareOrganisationAttendant;
import HealthBuddy.models.Network.Network;
import HealthBuddy.models.User.User;
import HealthBuddy.models.WorkQueue.BloodControllerAttendantWQ;
import HealthBuddy.models.WorkQueue.DoctorAttendantWQ;
import HealthBuddy.models.WorkQueue.WorkRequest;
import HealthBuddy.Config.Config;
import javax.swing.ImageIcon;
import java.awt.Image;

/**
 *
 * @author Dimple Patel
 * 
 */
public class WorkAreaAttendantJPanel extends javax.swing.JPanel {
    
    private JPanel displayJPanel;
    private Enterprise enterprise;
    private EcoSystem system;
    private Network network;
    private HealthcareOrganisationAttendant attendantOrg;
    private User ua;
    private AppointmentInformation appointment;

    /** Creates new form DonorWorkAreaPanel */
    public WorkAreaAttendantJPanel(JPanel displayJPanel, User userAccount ,HealthcareOrganisationAttendant attendantOrganisation, Enterprise enterprise,Network network,EcoSystem ecosystem) {
        initComponents();
        this.displayJPanel  = displayJPanel;
        this.attendantOrg = attendantOrganisation;
        this.enterprise = enterprise;
        this.system = ecosystem;
        this.network=network;
        this.ua=userAccount;
        populateAttendantTable();
        populateBloodStatusTable();
       attvalLabel.setText(ua.getEmployee().getEmployeeName());
       setSize(1540,800);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        attndtTabPane = new javax.swing.JTabbedPane();
        attworkAreaPane = new javax.swing.JPanel();
        welcmLabel = new javax.swing.JLabel();
        attmsgLabel = new javax.swing.JLabel();
        attvalLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        patpresinfoLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        atttble = new javax.swing.JTable();
        itmLabel = new javax.swing.JLabel();
        quantBloodTextF = new javax.swing.JTextField();
        buttonBloodWR = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Status = new javax.swing.JPanel();
        msgstatusLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblBloodStatus = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 102, 102));

        attndtTabPane.setBackground(new java.awt.Color(255, 255, 255));
        attndtTabPane.setForeground(new java.awt.Color(0, 102, 102));
        attndtTabPane.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        attworkAreaPane.setBackground(new java.awt.Color(255, 255, 255));
        attworkAreaPane.setForeground(new java.awt.Color(0, 102, 102));

        welcmLabel.setBackground(new java.awt.Color(255, 255, 255));
        welcmLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        welcmLabel.setForeground(new java.awt.Color(0, 102, 102));
        welcmLabel.setText("Welcome ");

        attmsgLabel.setBackground(new java.awt.Color(255, 255, 255));
        attmsgLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        attmsgLabel.setForeground(new java.awt.Color(0, 102, 102));
        attmsgLabel.setText("Attendant Work Area");

        attvalLabel.setBackground(new java.awt.Color(255, 255, 255));
        attvalLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        attvalLabel.setForeground(new java.awt.Color(0, 102, 102));
        attvalLabel.setText("value");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(0, 102, 102));

        patpresinfoLabel.setBackground(new java.awt.Color(255, 255, 255));
        patpresinfoLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        patpresinfoLabel.setForeground(new java.awt.Color(0, 102, 102));
        patpresinfoLabel.setText("Patient Prescription Details");

        jScrollPane1.setForeground(new java.awt.Color(0, 102, 102));

        atttble.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        atttble.setForeground(new java.awt.Color(0, 102, 102));
        atttble.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Disease", "Doctor Name", "Blood Required", "Donation Required", "Blood Group", "Message"
            }
        ));
        jScrollPane1.setViewportView(atttble);

        itmLabel.setBackground(new java.awt.Color(255, 255, 255));
        itmLabel.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        itmLabel.setForeground(new java.awt.Color(0, 102, 102));
        itmLabel.setText("Total Units of Blood Required: ");

        quantBloodTextF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        quantBloodTextF.setForeground(new java.awt.Color(0, 102, 102));
        quantBloodTextF.setText(" ");

        buttonBloodWR.setBackground(new java.awt.Color(0, 102, 102));
        buttonBloodWR.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        buttonBloodWR.setForeground(new java.awt.Color(255, 255, 255));
        buttonBloodWR.setText("Request Blood Bank");
        buttonBloodWR.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonBloodWR.setBorderPainted(false);
        buttonBloodWR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBloodWRActionPerformed(evt);
            }
        });

        ImageIcon imageIcon = new ImageIcon(new ImageIcon(getClass().getResource("/HealthBuddy/ui/images/attendant.gif")).getImage().getScaledInstance(450, 450, Image.SCALE_DEFAULT));

        jLabel5.setIcon(imageIcon);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(itmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(quantBloodTextF, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 892, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(patpresinfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonBloodWR)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(396, 396, 396))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(patpresinfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 500, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itmLabel)
                    .addComponent(quantBloodTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonBloodWR)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout attworkAreaPaneLayout = new javax.swing.GroupLayout(attworkAreaPane);
        attworkAreaPane.setLayout(attworkAreaPaneLayout);
        attworkAreaPaneLayout.setHorizontalGroup(
            attworkAreaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attworkAreaPaneLayout.createSequentialGroup()
                .addGroup(attworkAreaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(attworkAreaPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(attworkAreaPaneLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(attworkAreaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(attmsgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(attworkAreaPaneLayout.createSequentialGroup()
                                .addComponent(welcmLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(attvalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(390, Short.MAX_VALUE))
        );
        attworkAreaPaneLayout.setVerticalGroup(
            attworkAreaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attworkAreaPaneLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(attmsgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(attworkAreaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(welcmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attvalLabel))
                .addGap(77, 77, 77)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        attndtTabPane.addTab("Work Area", attworkAreaPane);

        Status.setBackground(new java.awt.Color(255, 255, 255));
        Status.setForeground(new java.awt.Color(0, 102, 102));

        msgstatusLabel.setBackground(new java.awt.Color(255, 255, 255));
        msgstatusLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        msgstatusLabel.setForeground(new java.awt.Color(0, 102, 102));
        msgstatusLabel.setText("Blood Donor Center Request Status");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.darkGray, java.awt.Color.lightGray));
        jPanel2.setForeground(new java.awt.Color(0, 102, 102));

        jScrollPane3.setForeground(new java.awt.Color(0, 102, 102));

        tblBloodStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblBloodStatus.setForeground(new java.awt.Color(0, 102, 102));
        tblBloodStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Blood Type", "Quantity of Blood", "Request Status"
            }
        ));
        jScrollPane3.setViewportView(tblBloodStatus);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        ImageIcon imageIcona = new ImageIcon(new ImageIcon(getClass().getResource("/HealthBuddy/ui/images/checkstatus.gif")).getImage().getScaledInstance(650, 550, Image.SCALE_DEFAULT));

        jLabel2.setIcon(imageIcona);

        javax.swing.GroupLayout StatusLayout = new javax.swing.GroupLayout(Status);
        Status.setLayout(StatusLayout);
        StatusLayout.setHorizontalGroup(
            StatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatusLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(StatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(msgstatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(102, 102, 102)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(642, Short.MAX_VALUE))
        );
        StatusLayout.setVerticalGroup(
            StatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatusLayout.createSequentialGroup()
                .addGroup(StatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StatusLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(msgstatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(StatusLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(700, Short.MAX_VALUE))
        );

        attndtTabPane.addTab("Check Status", Status);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(attndtTabPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(attndtTabPane)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBloodWRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBloodWRActionPerformed
        // TODO add your handling code here:
        
        int selectedRow=atttble.getSelectedRow();
        if(selectedRow>-1)
            {
                try {
                DoctorAttendantWQ docAttendantWorkQueue = (DoctorAttendantWQ)atttble.getValueAt(selectedRow, 0);
                BloodControllerAttendantWQ bloodAttendantWorkQueue= new BloodControllerAttendantWQ();   
                bloodAttendantWorkQueue.setSender(ua);
                bloodAttendantWorkQueue.setUnitsOfBlood(Integer.parseInt(Config.getClippedText(quantBloodTextF)));
                bloodAttendantWorkQueue.setNameOfPatient(docAttendantWorkQueue.getAppointmentInformation().getPatient().getPatientName());
                bloodAttendantWorkQueue.setTypeOfBlood(docAttendantWorkQueue.getAppointmentInformation().getPatient().getBloodGroup());
                bloodAttendantWorkQueue.setMessage("InQueue");
                bloodAttendantWorkQueue.setSender(ua);
                EnterpriseBloodDonorCenter bloodBank = null;
                for(Network network : system.getNetworkList()){
                    if(network.getNetworkName().equals(this.network.getNetworkName()))
                    {
                    docAttendantWorkQueue.setMessage("Posted");
                    this.network.getBloodDonorCenterRequests().getWorkRequestList().add(bloodAttendantWorkQueue);
                    ua.getWorkQueue().getWorkRequestList().add(bloodAttendantWorkQueue);
                    quantBloodTextF.setText("");
                    populateAttendantTable();
                    JOptionPane.showMessageDialog(null, "Request sent successfully!!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    break;  
                } 
            }
                    populateBloodStatusTable();
            
            }catch (Exception e){
                JOptionPane.showMessageDialog(null,"Entered quantity is invalid!");
            }
            }   
            else
            {
                        JOptionPane.showMessageDialog(null, "Please select a Patient record!","Warning", JOptionPane.WARNING_MESSAGE);
            }
        
        populateBloodStatusTable();
    }//GEN-LAST:event_buttonBloodWRActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Status;
    private javax.swing.JLabel attmsgLabel;
    private javax.swing.JTabbedPane attndtTabPane;
    private javax.swing.JTable atttble;
    private javax.swing.JLabel attvalLabel;
    private javax.swing.JPanel attworkAreaPane;
    private javax.swing.JButton buttonBloodWR;
    private javax.swing.JLabel itmLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel msgstatusLabel;
    private javax.swing.JLabel patpresinfoLabel;
    private javax.swing.JTextField quantBloodTextF;
    private javax.swing.JTable tblBloodStatus;
    private javax.swing.JLabel welcmLabel;
    // End of variables declaration//GEN-END:variables
 
    //Populate Attendant Work Area Table
    public void populateAttendantTable()
    {
        DefaultTableModel model = (DefaultTableModel) atttble.getModel();
        model.setRowCount(0);
        
        for(WorkRequest request : attendantOrg.getDoctorAttendantWQ().getWorkRequestList()){
            DoctorAttendantWQ doctorAttendantWorkQueue = new DoctorAttendantWQ();
            doctorAttendantWorkQueue = (DoctorAttendantWQ)request;
            Object[] row = new Object[7];
            row[0] = doctorAttendantWorkQueue;
            row[1] = doctorAttendantWorkQueue.getAppointmentInformation().getDiseases();
            row[2] = doctorAttendantWorkQueue.getAppointmentInformation().getDoctorName();
            row[3] = doctorAttendantWorkQueue.getAppointmentInformation().isIsBloodNeeded();
            row[4] = doctorAttendantWorkQueue.getAppointmentInformation().isFundNeeded();
            row[5]= doctorAttendantWorkQueue.getAppointmentInformation().getPatient().getBloodGroup();
            row[6] = doctorAttendantWorkQueue.getMessage();
            
            model.addRow(row);
        }        
    }
    
    //Populate Blood Status Table
    public void populateBloodStatusTable(){
    
    DefaultTableModel model = (DefaultTableModel) tblBloodStatus.getModel();
    model.setRowCount(0);
    
       for(WorkRequest request :attendantOrg.getBloodHeadAttendantWQ().getWorkRequestList()){
            BloodControllerAttendantWQ bloodAttendantWorkQueue = new BloodControllerAttendantWQ();
            bloodAttendantWorkQueue = (BloodControllerAttendantWQ)request;
            Object[] row = new Object[4];
            row[0] = bloodAttendantWorkQueue;
            row[1] = bloodAttendantWorkQueue.getTypeOfBlood();
            row[2] = bloodAttendantWorkQueue.getUnitsOfBlood();
            row[3]=request.getStatus();
           
            model.addRow(row);
        }
    }
}
