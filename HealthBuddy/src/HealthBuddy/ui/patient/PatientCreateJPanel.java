package HealthBuddy.ui.patient;
import java.awt.CardLayout;
import HealthBuddy.ui.donor.*;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.awt.Image;
import javax.swing.filechooser.FileSystemView;
import javax.swing.ImageIcon;
import HealthBuddy.models.EcoSystem;
import HealthBuddy.models.UserData.DonorData;
import HealthBuddy.models.UserData.DonorCatalog;
import HealthBuddy.models.UserData.PatientData;
import HealthBuddy.models.UserData.PatientCatalog;
import HealthBuddy.Config.OTPUtility;
import HealthBuddy.Config.SMSUtility;
import HealthBuddy.Config.SendEmailUtility;
import HealthBuddy.Config.Config;

/**
 *
 * @author Dimple Patel
 */
public class PatientCreateJPanel extends javax.swing.JPanel {
    
    private JPanel bodyPanel;
    private EcoSystem ecosystem;
    private PatientCatalog patientDirectoy;

    /** Creates new form DonorForm */
    public PatientCreateJPanel(JPanel bodyPanel, EcoSystem ecosystem) {
        initComponents();
        this.bodyPanel = bodyPanel;
        this.ecosystem = ecosystem;
        setSize(1540,830);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        registerpatlabel = new javax.swing.JLabel();
        messagelabel = new javax.swing.JLabel();
        helptextlabel = new javax.swing.JLabel();
        patnamelabel = new javax.swing.JLabel();
        patNameTextF = new javax.swing.JTextField();
        sexlabel = new javax.swing.JLabel();
        genderMRB = new javax.swing.JRadioButton();
        genderFRB = new javax.swing.JRadioButton();
        genderundisclosedRB = new javax.swing.JRadioButton();
        genderBiRB = new javax.swing.JRadioButton();
        birthTextF = new javax.swing.JTextField();
        birthlabel = new javax.swing.JLabel();
        addrslabel = new javax.swing.JLabel();
        addrsTextF = new javax.swing.JTextField();
        placeNamelabel = new javax.swing.JLabel();
        placeTextF = new javax.swing.JTextField();
        provincelabel = new javax.swing.JLabel();
        provincedropbox = new javax.swing.JComboBox<>();
        postcodelabel = new javax.swing.JLabel();
        postodeTextF = new javax.swing.JTextField();
        piclabel = new javax.swing.JLabel();
        mobPHTextF = new javax.swing.JTextField();
        mobPHlabel = new javax.swing.JLabel();
        buttonDP = new javax.swing.JButton();
        displayPiclabel = new javax.swing.JLabel();
        maillabel = new javax.swing.JLabel();
        mailTextF = new javax.swing.JTextField();
        buttonReg = new javax.swing.JButton();
        buttonbck = new javax.swing.JButton();
        grpBlabel = new javax.swing.JLabel();
        grpBdropbox = new javax.swing.JComboBox<>();
        giflabel = new javax.swing.JLabel();

        setBackground(null);
        setForeground(new java.awt.Color(0, 102, 102));
        setAutoscrolls(true);

        registerpatlabel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        registerpatlabel.setForeground(new java.awt.Color(0, 102, 102));
        registerpatlabel.setText("Register as a Patient");

        messagelabel.setBackground(new java.awt.Color(255, 255, 255));
        messagelabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        messagelabel.setForeground(new java.awt.Color(0, 102, 102));
        messagelabel.setText("Let's Help Each Other!");

        helptextlabel.setBackground(new java.awt.Color(255, 255, 255));
        helptextlabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        helptextlabel.setForeground(new java.awt.Color(0, 102, 102));
        helptextlabel.setText("Health Buddy is Here to Help!");

        patnamelabel.setBackground(null);
        patnamelabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        patnamelabel.setForeground(new java.awt.Color(0, 102, 102));
        patnamelabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        patnamelabel.setText("Patient Name:");

        patNameTextF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        patNameTextF.setForeground(new java.awt.Color(0, 102, 102));
        patNameTextF.setText(" ");

        sexlabel.setBackground(null);
        sexlabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sexlabel.setForeground(new java.awt.Color(0, 102, 102));
        sexlabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        sexlabel.setText("Gender:");

        genderMRB.setBackground(new java.awt.Color(255, 255, 255));
        genderMRB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        genderMRB.setForeground(new java.awt.Color(0, 102, 102));
        genderMRB.setText("Male");

        genderFRB.setBackground(new java.awt.Color(255, 255, 255));
        genderFRB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        genderFRB.setForeground(new java.awt.Color(0, 102, 102));
        genderFRB.setText("Female");
        genderFRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderFRBActionPerformed(evt);
            }
        });

        genderundisclosedRB.setBackground(new java.awt.Color(255, 255, 255));
        genderundisclosedRB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        genderundisclosedRB.setForeground(new java.awt.Color(0, 102, 102));
        genderundisclosedRB.setText("Prefer Not to Say");

        genderBiRB.setBackground(new java.awt.Color(255, 255, 255));
        genderBiRB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        genderBiRB.setForeground(new java.awt.Color(0, 102, 102));
        genderBiRB.setText("Bi Sexual");
        genderBiRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderBiRBActionPerformed(evt);
            }
        });

        birthTextF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        birthTextF.setForeground(new java.awt.Color(0, 102, 102));
        birthTextF.setText(" ");

        birthlabel.setBackground(null);
        birthlabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        birthlabel.setForeground(new java.awt.Color(0, 102, 102));
        birthlabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        birthlabel.setText("Date of Birth:");

        addrslabel.setBackground(null);
        addrslabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addrslabel.setForeground(new java.awt.Color(0, 102, 102));
        addrslabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        addrslabel.setText("Address:");

        addrsTextF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addrsTextF.setForeground(new java.awt.Color(0, 102, 102));
        addrsTextF.setText(" ");

        placeNamelabel.setBackground(null);
        placeNamelabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        placeNamelabel.setForeground(new java.awt.Color(0, 102, 102));
        placeNamelabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        placeNamelabel.setText("City:");

        placeTextF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        placeTextF.setForeground(new java.awt.Color(0, 102, 102));
        placeTextF.setText(" ");

        provincelabel.setBackground(null);
        provincelabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        provincelabel.setForeground(new java.awt.Color(0, 102, 102));
        provincelabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        provincelabel.setText("State:");

        provincedropbox.setForeground(new java.awt.Color(0, 0, 102));
        provincedropbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY", " " }));

        postcodelabel.setBackground(null);
        postcodelabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        postcodelabel.setForeground(new java.awt.Color(0, 102, 102));
        postcodelabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        postcodelabel.setText("Zip Code:");

        postodeTextF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        postodeTextF.setForeground(new java.awt.Color(0, 102, 102));
        postodeTextF.setText(" ");

        piclabel.setBackground(null);
        piclabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        piclabel.setForeground(new java.awt.Color(0, 102, 102));
        piclabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        piclabel.setText("Profile Picture:");

        mobPHTextF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mobPHTextF.setForeground(new java.awt.Color(0, 102, 102));
        mobPHTextF.setText(" ");

        mobPHlabel.setBackground(null);
        mobPHlabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        mobPHlabel.setForeground(new java.awt.Color(0, 102, 102));
        mobPHlabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        mobPHlabel.setText("Contact:");

        buttonDP.setBackground(new java.awt.Color(0, 102, 102));
        buttonDP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonDP.setForeground(new java.awt.Color(255, 255, 255));
        buttonDP.setText("Upload +");
        buttonDP.setBorderPainted(false);
        buttonDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDPActionPerformed(evt);
            }
        });

        displayPiclabel.setText(" ");

        maillabel.setBackground(null);
        maillabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        maillabel.setForeground(new java.awt.Color(0, 102, 102));
        maillabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        maillabel.setText("Email:");

        mailTextF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mailTextF.setForeground(new java.awt.Color(0, 102, 102));
        mailTextF.setText(" ");
        mailTextF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mailTextFActionPerformed(evt);
            }
        });

        buttonReg.setBackground(new java.awt.Color(0, 102, 102));
        buttonReg.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        buttonReg.setForeground(new java.awt.Color(255, 255, 255));
        buttonReg.setText("Register");
        buttonReg.setBorderPainted(false);
        buttonReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegActionPerformed(evt);
            }
        });

        buttonbck.setBackground(new java.awt.Color(0, 102, 102));
        buttonbck.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        buttonbck.setForeground(new java.awt.Color(255, 255, 255));
        buttonbck.setText("<< Back");
        buttonbck.setBorderPainted(false);
        buttonbck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonbckActionPerformed(evt);
            }
        });

        grpBlabel.setBackground(null);
        grpBlabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        grpBlabel.setForeground(new java.awt.Color(0, 102, 102));
        grpBlabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        grpBlabel.setText("Blood Group:");

        grpBdropbox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        grpBdropbox.setForeground(new java.awt.Color(0, 102, 102));
        grpBdropbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-", " " }));
        grpBdropbox.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        ImageIcon imageIcon =  new ImageIcon(new ImageIcon(getClass().getResource("/HealthBuddy/ui/images/patient.gif")).getImage().getScaledInstance(500, 500, Image.SCALE_DEFAULT));
        giflabel.setIcon(imageIcon);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(messagelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(343, 343, 343)
                        .addComponent(helptextlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonbck, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(registerpatlabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(patnamelabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sexlabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(genderMRB, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(genderFRB)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(45, 45, 45)
                                                .addComponent(buttonReg, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(genderBiRB)
                                                .addGap(18, 18, 18)
                                                .addComponent(genderundisclosedRB))))
                                    .addComponent(patNameTextF, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(birthlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addrslabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(birthTextF, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addComponent(addrsTextF)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(mobPHlabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                    .addComponent(piclabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                    .addComponent(maillabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                    .addComponent(grpBlabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(grpBdropbox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonDP, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addComponent(mailTextF)
                                    .addComponent(mobPHTextF)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(postcodelabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                    .addComponent(placeNamelabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                    .addComponent(provincelabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(provincedropbox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(postodeTextF)
                                    .addComponent(placeTextF))))
                        .addGap(57, 57, 57)
                        .addComponent(giflabel, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(393, 393, 393)
                        .addComponent(displayPiclabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1253, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {genderBiRB, genderFRB, genderMRB, genderundisclosedRB});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addrsTextF, birthTextF, buttonDP, grpBdropbox, mailTextF, mobPHTextF, patNameTextF, placeTextF, postodeTextF, provincedropbox});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(helptextlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(messagelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(buttonbck)
                        .addGap(20, 20, 20)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(registerpatlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patnamelabel)
                            .addComponent(patNameTextF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sexlabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(genderMRB, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(genderFRB)
                                    .addComponent(genderBiRB)
                                    .addComponent(genderundisclosedRB))
                                .addGap(3, 3, 3)))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(birthlabel)
                            .addComponent(birthTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addrslabel)
                            .addComponent(addrsTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(placeNamelabel)
                            .addComponent(placeTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(postcodelabel)
                            .addComponent(postodeTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(provincelabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(provincedropbox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mobPHlabel)
                            .addComponent(mobPHTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(piclabel)
                            .addComponent(buttonDP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maillabel)
                            .addComponent(mailTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(grpBlabel)
                            .addComponent(grpBdropbox, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addComponent(buttonReg)
                        .addGap(2415, 2415, 2415)
                        .addComponent(displayPiclabel, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(giflabel, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2463, 2463, 2463))))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addrsTextF, birthTextF, mailTextF, mobPHTextF, patNameTextF, placeTextF, postodeTextF});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {genderBiRB, genderFRB, genderMRB, genderundisclosedRB});

    }// </editor-fold>//GEN-END:initComponents

    private boolean femail=true;
    private boolean fbloodgroup=true;
    private void genderBiRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderBiRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderBiRBActionPerformed

    private void buttonDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDPActionPerformed
        // TODO add your handling code here:
        String profilePicPath;
        
         JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());

        int returnValue = jfc.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jfc.getSelectedFile();
            if (selectedFile.getName().endsWith(".jfif") || selectedFile.getName().contains(".jpeg") || selectedFile.getName().contains(".jpg") || selectedFile.getName().contains(".png")){
                displayPiclabel.setText(selectedFile.getName());
                profilePicPath = selectedFile.getAbsolutePath();
            } else {
                JOptionPane.showConfirmDialog(null, "Only jpeg/jpg and png format supported.", "Error!",
                        JOptionPane.DEFAULT_OPTION,
                        JOptionPane.PLAIN_MESSAGE);
            }

        }
    }//GEN-LAST:event_buttonDPActionPerformed

    private void buttonRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegActionPerformed
        // TODO add your handling code here:
        
        
            try {
            String date = Config.getClippedText(birthTextF);
            String name = Config.getClippedText(patNameTextF);
            String gender = getGenderValuesFromGivenRadioButtons();
            String phone = Config.getClippedText(mobPHTextF);
            String city = Config.getClippedText(placeTextF);
            String state = provincedropbox.getSelectedItem().toString();
            String address = Config.getClippedText(addrsTextF);
            int zipCode = Integer.parseInt(Config.getClippedText(postodeTextF));
            String email = Config.getClippedText(mailTextF);
            String profilePath = displayPiclabel.getText();
            String blood = (String) grpBdropbox.getSelectedItem();
        


            if (phone.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please enter the valid details for Phone Number", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (email.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please enter the valid details for Email", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (blood.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please enter the valid details for Blood", "Error", JOptionPane.ERROR_MESSAGE);
            }

            PatientData patient = new PatientData();
            patient.setPatientName(name);
            patient.setAddress(address);
            patient.setCity(city);
            patient.setState(state);
            patient.setDateOfBirth(new SimpleDateFormat("dd/MM/yyyy").parse(date));
            patient.setContactNo(phone);
            patient.setProfilePic(profilePath);
            patient.setGender(gender);
            patient.setZipCode(zipCode);
            patient.setEmail(email);
            patient.setBloodGroup(blood);

            femail = email.contains("@");

               
            //this is done in order to validate the email bloodGroup:
                if (femail) {
                    String[] to = {email};
                    String phoneNumber = patient.getContactNo();
                    String from = "dimple.patel1408@gmail.com";
                    String pwd = "Dimple@1423";

                    String code = OTPUtility.generateOTP(4);

                    String message = "Dear "+ name +",\n\nThis is your one time OTP :" + " " + code +" \nDon't share it with anyone!" +"\n\nThanks,\nHealthBuddy Team";
                    String subject = "Account Verification Mail";
                    SMSUtility.sendSMS(patient.getContactNo(), " Account Verification Mail  " + message);

                    JOptionPane.showMessageDialog(null, "Successfully recorded the Donor Details.\n Please proceed to activate your account.","Success",JOptionPane.INFORMATION_MESSAGE);

                    PatientValidateJPanel validatePatientJPanel = new PatientValidateJPanel(bodyPanel, ecosystem,code, patient );
                    bodyPanel.add("ValidatePatientJPanel", validatePatientJPanel);
                    CardLayout layout = (CardLayout) bodyPanel.getLayout();
                    layout.next(bodyPanel);
                }
                else
                    JOptionPane.showMessageDialog(null, "Email or Blood-Group inputes are not correct Please Try Again", "Error", JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Please enter the valid details", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonRegActionPerformed

    
    
    public String getGenderValuesFromGivenRadioButtons()
    {
        if(genderMRB.isSelected())
        {
            return "Male";
        }
        else if(genderFRB.isSelected())
        {
            return "Female";
        }  else if(genderBiRB.isSelected())
        {
            return "Bi Sexual";
        }  else if(genderundisclosedRB.isSelected())
        {
            return "Unknown";
        }

        return null;
    }

    private void buttonbckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonbckActionPerformed
        // TODO add your handling code here:
          bodyPanel.remove(this);
        CardLayout layout = (CardLayout) bodyPanel.getLayout();
        layout.previous(bodyPanel);
    }//GEN-LAST:event_buttonbckActionPerformed

    private void genderFRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderFRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderFRBActionPerformed

    private void mailTextFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mailTextFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mailTextFActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addrsTextF;
    private javax.swing.JLabel addrslabel;
    private javax.swing.JTextField birthTextF;
    private javax.swing.JLabel birthlabel;
    private javax.swing.JButton buttonDP;
    private javax.swing.JButton buttonReg;
    private javax.swing.JButton buttonbck;
    private javax.swing.JLabel displayPiclabel;
    private javax.swing.JRadioButton genderBiRB;
    private javax.swing.JRadioButton genderFRB;
    private javax.swing.JRadioButton genderMRB;
    private javax.swing.JRadioButton genderundisclosedRB;
    private javax.swing.JLabel giflabel;
    private javax.swing.JComboBox<String> grpBdropbox;
    private javax.swing.JLabel grpBlabel;
    private javax.swing.JLabel helptextlabel;
    private javax.swing.JTextField mailTextF;
    private javax.swing.JLabel maillabel;
    private javax.swing.JLabel messagelabel;
    private javax.swing.JTextField mobPHTextF;
    private javax.swing.JLabel mobPHlabel;
    private javax.swing.JTextField patNameTextF;
    private javax.swing.JLabel patnamelabel;
    private javax.swing.JLabel piclabel;
    private javax.swing.JLabel placeNamelabel;
    private javax.swing.JTextField placeTextF;
    private javax.swing.JLabel postcodelabel;
    private javax.swing.JTextField postodeTextF;
    private javax.swing.JComboBox<String> provincedropbox;
    private javax.swing.JLabel provincelabel;
    private javax.swing.JLabel registerpatlabel;
    private javax.swing.JLabel sexlabel;
    // End of variables declaration//GEN-END:variables

}
